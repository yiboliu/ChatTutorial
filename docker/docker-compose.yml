version: '3.4'
services:
  weaviate:
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8080'
      - --scheme
      - http
    image: semitechnologies/weaviate:1.23.9
    restart: on-failure:0
    ports:
      - 8080:8080
      - 50051:50051
    environment:
      QUERY_DEFAULTS_LIMIT: 20
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: "./data"
      DEFAULT_VECTORIZER_MODULE: text2vec-transformers
      ENABLE_MODULES: text2vec-transformers
      TRANSFORMERS_INFERENCE_API: http://t2v-transformers:8080
      CLUSTER_HOSTNAME: 'node1'
    networks:
      - weaviate-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready" ]
      interval: 30s
      timeout: 10s
      retries: 5

  t2v-transformers:
    image: semitechnologies/transformers-inference:sentence-transformers-multi-qa-MiniLM-L6-cos-v1
    environment:
      ENABLE_CUDA: 0
    networks:
      - weaviate-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/.well-known/ready" ]
      interval: 30s
      timeout: 10s
      retries: 5

  flask_app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "5001:5000"
    environment:
      - FLASK_ENV=development
      - WEAVIATE_URL=http://weaviate:8080
      - EXTERNAL_SERVER_URL=http://host.docker.internal:8081
    networks:
      - weaviate-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - weaviate
      - t2v-transformers
networks:
  weaviate-network:
    driver: bridge